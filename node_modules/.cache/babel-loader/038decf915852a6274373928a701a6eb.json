{"ast":null,"code":"var _jsxFileName = \"/home/gean/Documentos/Personal_Projects/todolist/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport * as C from './App.styles';\nimport { ListItem } from './components/ListItem';\nimport { AddArea } from './components/AddArea';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [list, setList] = useState([{\n    id: 1,\n    name: 'Comprar o pão na padaria',\n    done: false\n  }, {\n    id: 2,\n    name: 'Comprar o bolo na padaria',\n    done: true\n  }, {\n    id: 3,\n    name: 'Comprar a chipa na padaria',\n    done: false\n  }]);\n\n  const handleAddTask = taskName => {\n    let newList = [...list];\n    newList.push({\n      id: list[list.length - 1].id + 1,\n      name: taskName,\n      done: false\n    });\n    setList(newList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(C.Container, {\n    children: /*#__PURE__*/_jsxDEV(C.Area, {\n      children: [/*#__PURE__*/_jsxDEV(C.Header, {\n        children: \"Lista de tarefas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddArea, {\n        onEnter: handleAddTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), list.map((item, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        item: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"5rNo2i4jlmECCzIPUJ3eXD5Qbkg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/gean/Documentos/Personal_Projects/todolist/src/App.tsx"],"names":["useState","C","ListItem","AddArea","App","list","setList","id","name","done","handleAddTask","taskName","newList","push","length","map","item","index"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,KAAKC,CAAZ,MAAmB,cAAnB;AAEA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,OAAT,QAAwB,sBAAxB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAS,CACvC;AAAEO,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,0BAAf;AAA2CC,IAAAA,IAAI,EAAE;AAAjD,GADuC,EAEvC;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,2BAAf;AAA4CC,IAAAA,IAAI,EAAE;AAAlD,GAFuC,EAGvC;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,4BAAf;AAA6CC,IAAAA,IAAI,EAAE;AAAnD,GAHuC,CAAT,CAAhC;;AAMA,QAAMC,aAAa,GAAIC,QAAD,IAAsB;AAC1C,QAAIC,OAAO,GAAG,CAAC,GAAGP,IAAJ,CAAd;AACAO,IAAAA,OAAO,CAACC,IAAR,CAAa;AACXN,MAAAA,EAAE,EAAEF,IAAI,CAACA,IAAI,CAACS,MAAL,GAAa,CAAd,CAAJ,CAAqBP,EAArB,GAA0B,CADnB;AAEXC,MAAAA,IAAI,EAAEG,QAFK;AAGXF,MAAAA,IAAI,EAAE;AAHK,KAAb;AAKAH,IAAAA,OAAO,CAACM,OAAD,CAAP;AACD,GARD;;AAUA,sBACE,QAAC,CAAD,CAAG,SAAH;AAAA,2BACE,QAAC,CAAD,CAAG,IAAH;AAAA,8BACE,QAAC,CAAD,CAAG,MAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE,QAAC,OAAD;AAAS,QAAA,OAAO,EAAGF;AAAnB;AAAA;AAAA;AAAA;AAAA,cAHF,EAMIL,IAAI,CAACU,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,kBACT,QAAC,QAAD;AAAwB,QAAA,IAAI,EAAGD;AAA/B,SAAgBC,KAAhB;AAAA;AAAA;AAAA;AAAA,cADA,CANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA/BD;;GAAMb,G;;KAAAA,G;AAiCN,eAAeA,GAAf","sourcesContent":["import { useState } from 'react';\nimport * as C from './App.styles';\nimport { Item } from './types/item';\nimport { ListItem } from './components/ListItem';\nimport { AddArea } from './components/AddArea';\n\nconst App = () => {\n  const [list, setList] = useState<Item[]>([\n    { id: 1, name: 'Comprar o pão na padaria', done: false },\n    { id: 2, name: 'Comprar o bolo na padaria', done: true },\n    { id: 3, name: 'Comprar a chipa na padaria', done: false },\n  ])\n\n  const handleAddTask = (taskName: string) => {\n    let newList = [...list];\n    newList.push({\n      id: list[list.length -1].id + 1,\n      name: taskName,\n      done: false,\n    });\n    setList(newList)\n  }\n  \n  return (\n    <C.Container>\n      <C.Area>\n        <C.Header>Lista de tarefas</C.Header>\n\n        <AddArea onEnter={ handleAddTask } />\n\n\n        { list.map((item, index) => (\n          <ListItem key={ index } item={ item } />\n        )) }\n      </C.Area>\n    </C.Container>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}