{"ast":null,"code":"import _toConsumableArray from\"/home/gean/Documentos/Personal_Projects/todolist/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/gean/Documentos/Personal_Projects/todolist/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from'react';import*as C from'./App.styles';import{ListItem}from'./components/ListItem';import{AddArea}from'./components/AddArea';import{Menu}from'./components/Menu';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var App=function App(){var localSavadList=localStorage.getItem('savedList');var savedList=JSON.parse(localSavadList||'[]');var _useState=useState(savedList),_useState2=_slicedToArray(_useState,2),list=_useState2[0],setList=_useState2[1];var handleAddTask=function handleAddTask(taskName){if(list.length===0){setList([{id:1,name:taskName,done:false,selectd:false}]);}else{var newList=_toConsumableArray(list);newList.push({id:list[list.length-1].id+1,name:taskName,done:false,selectd:false});setList(newList);}};var hendleChecked=function hendleChecked(taskChecked,taskId){var newList=list.map(function(task){if(task.id!==taskId)return task;task.done=taskChecked;return task;});setList(newList);};var hendleClick=function hendleClick(taskSelected,taskId){var newList=list.map(function(task){if(task.id!==taskId){task.selectd=false;return task;}task.selectd=taskSelected;return task;});setList(newList);};var handleRemove=function handleRemove(){var newList=list.filter(function(task){return task.selectd!==true;});setList(newList);};var handleRemoveAllDone=function handleRemoveAllDone(){var newList=list.filter(function(task){return task.done!==true;});setList(newList);};var handleClearAll=function handleClearAll(){setList([]);};var handleSaved=function handleSaved(){localStorage.setItem('savedList',JSON.stringify(list));alert('lista salva');};var handleButtons={handleRemove:handleRemove,handleRemoveAllDone:handleRemoveAllDone,handleClearAll:handleClearAll,handleSaved:handleSaved};return/*#__PURE__*/_jsxs(C.Container,{children:[/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(C.Area,{children:[/*#__PURE__*/_jsx(C.Header,{children:\"Lista de tarefas\"}),/*#__PURE__*/_jsx(AddArea,{onEnter:handleAddTask}),list.map(function(item,index){return/*#__PURE__*/_jsx(ListItem,{item:item,onChecked:hendleChecked,labelClick:hendleClick},index);})]})}),/*#__PURE__*/_jsx(C.Area,{children:/*#__PURE__*/_jsx(Menu,{handleButtons:handleButtons})})]});};export default App;","map":{"version":3,"sources":["/home/gean/Documentos/Personal_Projects/todolist/src/App.tsx"],"names":["useState","C","ListItem","AddArea","Menu","App","localSavadList","localStorage","getItem","savedList","JSON","parse","list","setList","handleAddTask","taskName","length","id","name","done","selectd","newList","push","hendleChecked","taskChecked","taskId","map","task","hendleClick","taskSelected","handleRemove","filter","handleRemoveAllDone","handleClearAll","handleSaved","setItem","stringify","alert","handleButtons","item","index"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport * as C from './App.styles';\nimport { Item } from './types/item';\nimport { ListItem } from './components/ListItem';\nimport { AddArea } from './components/AddArea';\nimport { Menu } from './components/Menu';\n\nconst App = () => {\n  const localSavadList = localStorage.getItem('savedList');\n  const savedList = JSON.parse(localSavadList || '[]');\n\n  const [list, setList] = useState<Item[]>(savedList);\n\n  const handleAddTask = (taskName: string) => {\n    if (list.length === 0) { \n      setList([{\n        id: 1,\n        name: taskName,\n        done: false,\n        selectd: false,\n      }])\n    } else {\n      let newList = [...list];\n      newList.push({\n        id: list[list.length -1].id + 1,\n        name: taskName,\n        done: false,\n        selectd: false,\n      });\n      setList(newList)  \n    }\n  }\n\n  const hendleChecked = (taskChecked: boolean, taskId: number) => {\n    let newList = list.map((task) => {\n      if (task.id !== taskId) return task;\n      task.done = taskChecked;\n      return task;\n    });\n    setList(newList);\n  }\n\n  const hendleClick = (taskSelected: boolean, taskId: number) => {\n    let newList = list.map((task) => {\n      if (task.id !== taskId) {\n        task.selectd = false;\n        return task;\n      }\n      task.selectd = taskSelected;\n      return task;\n    });\n    setList(newList);\n  }\n\n  const handleRemove = () => {\n    let newList = list.filter((task) => task.selectd !== true);\n    setList(newList);\n  }\n\n  const handleRemoveAllDone = () => {\n    let newList = list.filter((task) => task.done !== true);\n    setList(newList);\n  }\n\n  const handleClearAll = () => {\n    setList([]);\n  }\n\n  const handleSaved = () => {\n    localStorage.setItem('savedList', JSON.stringify(list));\n    alert('lista salva');\n  }\n\n\n  const handleButtons = {\n    handleRemove,\n    handleRemoveAllDone,\n    handleClearAll,\n    handleSaved,\n  }\n\n  return (\n    <C.Container>\n      <>\n        <C.Area>\n          <C.Header>Lista de tarefas</C.Header>\n\n          <AddArea onEnter={ handleAddTask } />\n\n          { list.map((item, index) => (\n            <ListItem key={ index } item={ item } onChecked={ hendleChecked } labelClick={ hendleClick } />\n          )) }\n        </C.Area>\n      </>\n\n      <C.Area>\n        <Menu handleButtons={ handleButtons } />\n      </C.Area>\n    </C.Container>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}