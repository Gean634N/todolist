{"ast":null,"code":"var _jsxFileName = \"/home/gean/Documentos/Personal_Projects/todolist/src/components/AddArea/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport * as C from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddArea = ({\n  onEnter\n}) => {\n  _s();\n\n  const [inputText, setInputText] = useState('');\n\n  const handleKeyUp = e => {\n    if (e.code === 'Enter' && inputText !== '') {\n      onEnter(inputText);\n      setInputText('');\n    }\n  };\n\n  const handleClick = () => {\n    if (inputText !== '') {\n      onEnter(inputText);\n      setInputText('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(C.Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image\",\n      onClick: handleClick,\n      children: \"\\u2795\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Add a new task\",\n      value: inputText,\n      onChange: ({\n        target\n      }) => setInputText(target.value),\n      onKeyUp: handleKeyUp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddArea, \"wAh2Cv8Kk70PfbjrJimBRYwxb6g=\");\n\n_c = AddArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddArea\");","map":{"version":3,"sources":["/home/gean/Documentos/Personal_Projects/todolist/src/components/AddArea/index.tsx"],"names":["useState","C","AddArea","onEnter","inputText","setInputText","handleKeyUp","e","code","handleClick","target","value"],"mappings":";;;AAAA,SAASA,QAAT,QAAwC,OAAxC;AACA,OAAO,KAAKC,CAAZ,MAAmB,UAAnB;;AAMA,OAAO,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAwB;AAAA;;AAC7C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMM,WAAW,GAAIC,CAAD,IAAsB;AACxC,QAAGA,CAAC,CAACC,IAAF,KAAW,OAAX,IAAsBJ,SAAS,KAAK,EAAvC,EAA2C;AACzCD,MAAAA,OAAO,CAACC,SAAD,CAAP;AACAC,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACD;AACF,GALD;;AAOA,QAAMI,WAAW,GAAG,MAAM;AACxB,QAAIL,SAAS,KAAK,EAAlB,EAAsB;AACpBD,MAAAA,OAAO,CAACC,SAAD,CAAP;AACAC,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACD;AACF,GALD;;AAOA,sBACE,QAAC,CAAD,CAAG,SAAH;AAAA,4BACE;AACE,MAAA,SAAS,EAAC,OADZ;AAEE,MAAA,OAAO,EAAGI,WAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,gBAFd;AAGE,MAAA,KAAK,EAAEL,SAHT;AAIE,MAAA,QAAQ,EAAG,CAAC;AAAEM,QAAAA;AAAF,OAAD,KAAgBL,YAAY,CAACK,MAAM,CAACC,KAAR,CAJzC;AAKE,MAAA,OAAO,EAAGL;AALZ;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAnCM;;GAAMJ,O;;KAAAA,O","sourcesContent":["import { useState, KeyboardEvent } from 'react';\nimport * as C from './styles';\n\ntype Props = {\n  onEnter: (taskName: string) => void;\n}\n\nexport const AddArea = ({ onEnter }: Props) => {\n  const [inputText, setInputText] = useState('');\n\n  const handleKeyUp = (e: KeyboardEvent) => {\n    if(e.code === 'Enter' && inputText !== '') {\n      onEnter(inputText);\n      setInputText('');\n    }\n  }\n\n  const handleClick = () => {\n    if (inputText !== '') {\n      onEnter(inputText);\n      setInputText('');\n    }\n  }\n  \n  return (\n    <C.Container>\n      <div\n        className=\"image\"\n        onClick={ handleClick }\n      >\n        âž•\n      </div>\n\n      <input \n        type=\"text\"\n        placeholder=\"Add a new task\"\n        value={inputText}\n        onChange={ ({ target }) => setInputText(target.value) }\n        onKeyUp={ handleKeyUp }\n      />\n    </C.Container>\n  );\n}"]},"metadata":{},"sourceType":"module"}